<?php
/**
 * Script de diagn√≥stico para Analytics Dashboard
 * Identifica problemas con las gr√°ficas
 */

// Incluir WordPress
require_once '../../../wp-config.php';

echo "<h1>üîç Diagn√≥stico de Analytics Dashboard</h1>";

// 1. Verificar si la clase existe
echo "<h2>1. Verificaci√≥n de Clase</h2>";
if (class_exists('WVP_Analytics_Dashboard')) {
    echo "‚úÖ Clase WVP_Analytics_Dashboard existe<br>";
    
    $analytics = new WVP_Analytics_Dashboard();
    echo "‚úÖ Instancia creada correctamente<br>";
} else {
    echo "‚ùå Clase WVP_Analytics_Dashboard NO existe<br>";
}

// 2. Verificar funci√≥n AJAX
echo "<h2>2. Verificaci√≥n de Funci√≥n AJAX</h2>";
if (method_exists($analytics, 'ajax_get_analytics_data')) {
    echo "‚úÖ M√©todo ajax_get_analytics_data existe<br>";
} else {
    echo "‚ùå M√©todo ajax_get_analytics_data NO existe<br>";
}

// 3. Verificar funci√≥n de datos de demostraci√≥n
echo "<h2>3. Verificaci√≥n de Datos de Demostraci√≥n</h2>";
if (method_exists($analytics, 'generate_demo_analytics_data')) {
    echo "‚úÖ M√©todo generate_demo_analytics_data existe<br>";
    
    // Probar generaci√≥n de datos
    try {
        $demo_data = $analytics->generate_demo_analytics_data('30_days');
        echo "‚úÖ Datos de demostraci√≥n generados correctamente<br>";
        echo "üìä Estructura de datos:<br>";
        echo "<pre>" . print_r(array_keys($demo_data), true) . "</pre>";
        
        // Verificar estructura de ventas
        if (isset($demo_data['sales']) && isset($demo_data['sales']['daily_data'])) {
            echo "‚úÖ Datos de ventas diarias disponibles: " . count($demo_data['sales']['daily_data']) . " d√≠as<br>";
        } else {
            echo "‚ùå Datos de ventas diarias NO disponibles<br>";
        }
        
    } catch (Exception $e) {
        echo "‚ùå Error al generar datos de demostraci√≥n: " . $e->getMessage() . "<br>";
    }
} else {
    echo "‚ùå M√©todo generate_demo_analytics_data NO existe<br>";
}

// 4. Verificar hooks de WordPress
echo "<h2>4. Verificaci√≥n de Hooks</h2>";
global $wp_filter;
if (isset($wp_filter['wp_ajax_wvp_get_analytics_data'])) {
    echo "‚úÖ Hook wp_ajax_wvp_get_analytics_data registrado<br>";
} else {
    echo "‚ùå Hook wp_ajax_wvp_get_analytics_data NO registrado<br>";
}

// 5. Simular llamada AJAX
echo "<h2>5. Simulaci√≥n de Llamada AJAX</h2>";
try {
    // Simular POST data
    $_POST['period'] = '30_days';
    $_POST['nonce'] = wp_create_nonce('wvp_analytics_nonce');
    
    // Capturar output
    ob_start();
    $analytics->ajax_get_analytics_data();
    $output = ob_get_clean();
    
    echo "‚úÖ Llamada AJAX ejecutada<br>";
    echo "üì§ Respuesta: " . substr($output, 0, 200) . "...<br>";
    
} catch (Exception $e) {
    echo "‚ùå Error en llamada AJAX: " . $e->getMessage() . "<br>";
}

// 6. Verificar JavaScript
echo "<h2>6. Verificaci√≥n de JavaScript</h2>";
echo "üîç Revisar en el navegador:<br>";
echo "- Abrir DevTools (F12)<br>";
echo "- Ir a la pesta√±a Console<br>";
echo "- Recargar la p√°gina de An√°lisis<br>";
echo "- Buscar errores JavaScript<br>";

// 7. Verificar Chart.js
echo "<h2>7. Verificaci√≥n de Chart.js</h2>";
echo "üîç Verificar en el navegador:<br>";
echo "- Abrir DevTools (F12)<br>";
echo "- Ir a la pesta√±a Network<br>";
echo "- Recargar la p√°gina de An√°lisis<br>";
echo "- Buscar si Chart.js se carga correctamente<br>";

echo "<h2>üéØ Pr√≥ximos Pasos</h2>";
echo "1. Ejecutar este script<br>";
echo "2. Revisar los resultados<br>";
echo "3. Probar la p√°gina de An√°lisis en el navegador<br>";
echo "4. Revisar la consola del navegador para errores JavaScript<br>";

echo "<hr>";
echo "<p><strong>Script ejecutado el:</strong> " . date('Y-m-d H:i:s') . "</p>";
?>
